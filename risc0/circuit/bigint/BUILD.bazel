load("@rules_pkg//pkg:zip.bzl", "pkg_zip")
load("//bazel/rules/zirgen:edsl-defs.bzl", "build_circuit")

package(
    default_visibility = ["//visibility:public"],
)

cc_library(
    name = "lib",
    srcs = [
        "rsa.cpp",
    ],
    hdrs = [
        "rsa.h",
        "//zirgen/circuit/recursion",
        "//zirgen/circuit/rv32im/v1/edsl:rv32im",
    ],
    deps = [
        "//zirgen/Dialect/BigInt/IR",
        "//zirgen/Dialect/BigInt/Transforms",
        "//zirgen/circuit/recursion:lib",
        "//zirgen/circuit/verify:lib",
        "//zirgen/compiler/edsl",
    ],
)

ZKRS = [
    ("rsa_" + str(bits))
    for bits in [
        256,
        3072,
    ]
]

build_circuit(
    name = "gen_bigint",
    srcs = ["gen_bigint.cpp"],
    outs = [fn for zkr in ZKRS for fn in [
        zkr + ".zkr",
        zkr + ".zkr.dbg",
    ]] + ["bigint.rs.inc"],
    deps = [":lib"],
)

pkg_zip(
    name = "bigint_zkr",
    srcs = [x + ".zkr" for x in ZKRS],
)
